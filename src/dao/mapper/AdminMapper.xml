<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.AdminMapper">
    <resultMap id="BaseResultMap" type="model.Admin">
        <id column="id" property="id" />
        <result column="createTime" property="createTime" />
        <result column="modifyTime" property="modifyTime" />
        <result column="name" property="name" />
        <result column="pwd" property="pwd" />

    </resultMap>
    
    <sql id="Base_Column_List">
        id, createTime, modifyTime, name, pwd

    </sql>
    
    <select id="selectByPrimaryColumn" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from admin
        where id = #{id}
    </select>
  
    <select id="select" parameterType="model.Admin" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from admin
        where 1 = 1
        <if test="id != null" >
            and id = #{id}
        </if>
        <if test="createTime != null" >
            and createTime = #{createTime}
        </if>
        <if test="modifyTime != null" >
            and modifyTime = #{modifyTime}
        </if>
        <if test="name != null" >
            and name = #{name}
        </if>
        <if test="pwd != null" >
            and pwd = #{pwd}
        </if>

    </select>
    
    <delete id="deleteByPrimaryColumn" parameterType="java.lang.Integer">
        delete from admin where id = #{id}
    </delete>
    
    <insert id="insert" parameterType="model.Admin">
        insert into admin (
            createTime, modifyTime, name, pwd

        )
        values (
            #{createTime}, , #{modifyTime}, , #{name}, , #{pwd}, 
        )
    </insert>
  
    <insert id="insertSelective" useGeneratedKeys="true"  keyProperty="id" parameterType="model.Admin">
        insert into admin
        <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="createTime != null">
            createTime,
        </if>
        <if test="modifyTime != null">
            modifyTime,
        </if>
        <if test="name != null">
            name,
        </if>
        <if test="pwd != null">
            pwd,
        </if>

        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
        <if test="createTime != null">
            #{createTime},
        </if>
        <if test="modifyTime != null">
            #{modifyTime},
        </if>
        <if test="name != null">
            #{name},
        </if>
        <if test="pwd != null">
            #{pwd},
        </if>

        </trim>
    </insert>
  
    <update id="updateByPrimaryColumnSelective" parameterType="model.Admin">
        update admin
        <set>
        <if test="createTime != null">
            createTime = #{createTime},
        </if>
        <if test="modifyTime != null">
            modifyTime = #{modifyTime},
        </if>
        <if test="name != null">
            name = #{name},
        </if>
        <if test="pwd != null">
            pwd = #{pwd},
        </if>

        </set>
        where id = #{id}
    </update>
    
    <update id="updateByPrimaryColumn" parameterType="model.Admin">
        update admin
        set 
        createTime = #{createTime}, 
        modifyTime = #{modifyTime}, 
        name = #{name}, 
        pwd = #{pwd}

        where id = #{id}
    </update>
    
    <insert id="insertBatch" parameterType="java.util.List">  
        insert into admin (
                        createTime, modifyTime, name, pwd

        )
        values 
        <foreach collection="list" index="index" item="item" separator=",">  
        (
        #{item.createTime}, 
        #{item.modifyTime}, 
        #{item.name}, 
        #{item.pwd}

        )
        </foreach>
    </insert>
  
    <update id="updateBatch" parameterType="java.util.List"> 
        update admin
        set 
        createTime = #{createTime}, 
        modifyTime = #{modifyTime}, 
        name = #{name}, 
        pwd = #{pwd}

        where id = #{id}
        <foreach close=")" collection="idList" index="index" item="item" open="(" separator=",">     
            #{item}
        </foreach>
    </update>
 
    <delete id="deleteBatch" parameterType="java.util.List"> 
        DELETE FROM admin WHERE id IN 
        <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">  
            #{item}  
        </foreach> 
    </delete>
 
</mapper>